{"ast":null,"code":"import React from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const ChatMessages=_ref=>{let{messages,indicatorState}=_ref;return/*#__PURE__*/_jsxs(\"div\",{children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.role,\":\"]}),\" \",msg.content]},index)),indicatorState.map((indicator,index)=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"em\",{children:indicator.status})},index))]});};export default ChatMessages;","map":{"version":3,"names":["React","jsxs","_jsxs","jsx","_jsx","ChatMessages","_ref","messages","indicatorState","children","map","msg","index","role","content","indicator","status"],"sources":["C:/Users/shilo/Friedmann-initial-page/frontend/src/components/chat/messages.tsx"],"sourcesContent":["import React from 'react';\nimport { DisplayMessage, LoadingIndicator } from '../../types';\n\ninterface ChatMessagesProps {\n  messages: DisplayMessage[];\n  indicatorState: LoadingIndicator[];\n}\n\nconst ChatMessages: React.FC<ChatMessagesProps> = ({ messages, indicatorState }) => {\n  return (\n    <div>\n      {messages.map((msg, index) => (\n        <div key={index}>\n          <strong>{msg.role}:</strong> {msg.content}\n        </div>\n      ))}\n      {indicatorState.map((indicator, index) => (\n        <div key={index}>\n          <em>{indicator.status}</em>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatMessages;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAQ1B,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAkC,IAAjC,CAAEC,QAAQ,CAAEC,cAAe,CAAC,CAAAF,IAAA,CAC7E,mBACEJ,KAAA,QAAAO,QAAA,EACGF,QAAQ,CAACG,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACvBV,KAAA,QAAAO,QAAA,eACEP,KAAA,WAAAO,QAAA,EAASE,GAAG,CAACE,IAAI,CAAC,GAAC,EAAQ,CAAC,IAAC,CAACF,GAAG,CAACG,OAAO,GADjCF,KAEL,CACN,CAAC,CACDJ,cAAc,CAACE,GAAG,CAAC,CAACK,SAAS,CAAEH,KAAK,gBACnCR,IAAA,QAAAK,QAAA,cACEL,IAAA,OAAAK,QAAA,CAAKM,SAAS,CAACC,MAAM,CAAK,CAAC,EADnBJ,KAEL,CACN,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}