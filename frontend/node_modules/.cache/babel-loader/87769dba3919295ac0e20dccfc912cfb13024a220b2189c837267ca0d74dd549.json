{"ast":null,"code":"'use client';import{TooltipProvider}from'@radix-ui/react-tooltip';import ChatMessages from'../chat/messages';import ChatInput from'../chat/input';import FinancialHeader from'./FinancialHeader';import useFinancialApp from'../../hooks/useFinancialApp';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function FinancialApp(){const{messages,handleInputChange,handleSubmit,indicatorState,input,isLoading,setMessages,clearMessages,conversationId}=useFinancialApp();const handleGenerateReport=async()=>{try{// For now, we'll use a default client name. In a real app, you'd get this from user input or context\nconst clientName=prompt(\"Enter client name for the financial report:\");if(!clientName)return;const response=await fetch('http://localhost:8000/api/generate-report',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({client_name:clientName,conversation_id:conversationId,report_type:'comprehensive'})});if(response.ok){const result=await response.json();// Add the report URL as a message in the chat\nconst reportMessage=\"\\uD83D\\uDCCA **Financial Report Generated Successfully!**\\n\\n**Client:** \".concat(clientName,\"\\n**Report ID:** \").concat(result.report_id,\"\\n\\n**Report URL:** \").concat(result.report_url,\"\\n\\n*Copy the URL above and paste it in a new tab to view your professional financial report.*\");// Add the report message to the chat\nconst reportChatMessage={role:\"assistant\",content:reportMessage,citations:[]};// Update messages state\nsetMessages(prevMessages=>[...prevMessages,reportChatMessage]);// Also try to copy to clipboard\ntry{await navigator.clipboard.writeText(result.report_url);}catch(clipboardError){// Clipboard copy failed, but that's okay since the URL is in the chat\nconsole.log('Clipboard copy failed, but URL is displayed in chat');}}else{const errorMessage={role:\"assistant\",content:\"❌ Failed to generate financial report. Please try again.\",citations:[]};setMessages(prevMessages=>[...prevMessages,errorMessage]);}}catch(error){console.error('Error generating report:',error);const errorMessage={role:\"assistant\",content:\"❌ Error generating financial report. Please try again.\",citations:[]};setMessages(prevMessages=>[...prevMessages,errorMessage]);}};return/*#__PURE__*/_jsx(TooltipProvider,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-screen bg-gray-900\",children:[/*#__PURE__*/_jsx(FinancialHeader,{clearMessages:clearMessages,onGenerateReport:handleGenerateReport}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-hidden pt-16\",children:/*#__PURE__*/_jsx(ChatMessages,{messages:messages,indicatorState:indicatorState})}),/*#__PURE__*/_jsx(ChatInput,{handleInputChange:handleInputChange,handleSubmit:handleSubmit,input:input,isLoading:isLoading})]})});}","map":{"version":3,"names":["TooltipProvider","ChatMessages","ChatInput","FinancialHeader","useFinancialApp","jsx","_jsx","jsxs","_jsxs","FinancialApp","messages","handleInputChange","handleSubmit","indicatorState","input","isLoading","setMessages","clearMessages","conversationId","handleGenerateReport","clientName","prompt","response","fetch","method","headers","body","JSON","stringify","client_name","conversation_id","report_type","ok","result","json","reportMessage","concat","report_id","report_url","reportChatMessage","role","content","citations","prevMessages","navigator","clipboard","writeText","clipboardError","console","log","errorMessage","error","children","className","onGenerateReport"],"sources":["C:/Users/shilo/Friedmann-initial-page/frontend/src/components/financial/FinancialApp.tsx"],"sourcesContent":["'use client';\n\nimport { TooltipProvider } from '@radix-ui/react-tooltip';\nimport ChatMessages from '../chat/messages';\nimport ChatInput from '../chat/input';\nimport FinancialHeader from './FinancialHeader';\nimport useFinancialApp from '../../hooks/useFinancialApp';\nimport { DisplayMessage } from '../../types';\n\nexport default function FinancialApp() {\n  const {\n    messages,\n    handleInputChange,\n    handleSubmit,\n    indicatorState,\n    input,\n    isLoading,\n    setMessages,\n    clearMessages,\n    conversationId,\n  } = useFinancialApp();\n\n  const handleGenerateReport = async () => {\n    try {\n      // For now, we'll use a default client name. In a real app, you'd get this from user input or context\n      const clientName = prompt(\"Enter client name for the financial report:\");\n      if (!clientName) return;\n\n      const response = await fetch('http://localhost:8000/api/generate-report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          client_name: clientName,\n          conversation_id: conversationId,\n          report_type: 'comprehensive'\n        }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        \n        // Add the report URL as a message in the chat\n        const reportMessage = `📊 **Financial Report Generated Successfully!**\n\n**Client:** ${clientName}\n**Report ID:** ${result.report_id}\n\n**Report URL:** ${result.report_url}\n\n*Copy the URL above and paste it in a new tab to view your professional financial report.*`;\n\n        // Add the report message to the chat\n        const reportChatMessage: DisplayMessage = {\n          role: \"assistant\" as const,\n          content: reportMessage,\n          citations: []\n        };\n        \n        // Update messages state\n        setMessages(prevMessages => [...prevMessages, reportChatMessage]);\n        \n        // Also try to copy to clipboard\n        try {\n          await navigator.clipboard.writeText(result.report_url);\n        } catch (clipboardError) {\n          // Clipboard copy failed, but that's okay since the URL is in the chat\n          console.log('Clipboard copy failed, but URL is displayed in chat');\n        }\n      } else {\n        const errorMessage: DisplayMessage = {\n          role: \"assistant\" as const,\n          content: \"❌ Failed to generate financial report. Please try again.\",\n          citations: []\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n      }\n    } catch (error) {\n      console.error('Error generating report:', error);\n      const errorMessage: DisplayMessage = {\n        role: \"assistant\" as const,\n        content: \"❌ Error generating financial report. Please try again.\",\n        citations: []\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n\n  return (\n    <TooltipProvider>\n      <div className='flex flex-col h-screen bg-gray-900'>\n        <FinancialHeader clearMessages={clearMessages} onGenerateReport={handleGenerateReport} />\n        \n        <div className='flex-1 overflow-hidden pt-16'>\n          <ChatMessages\n            messages={messages}\n            indicatorState={indicatorState}\n          />\n        </div>\n\n        <ChatInput\n          handleInputChange={handleInputChange}\n          handleSubmit={handleSubmit}\n          input={input}\n          isLoading={isLoading}\n        />\n      </div>\n    </TooltipProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}