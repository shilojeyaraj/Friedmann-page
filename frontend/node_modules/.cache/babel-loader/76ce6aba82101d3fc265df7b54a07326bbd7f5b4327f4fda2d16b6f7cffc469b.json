{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shilo\\\\Friedmann-initial-page\\\\frontend\\\\src\\\\components\\\\chat\\\\messages.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatMessages = ({\n  messages,\n  indicatorState\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [msg.role, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), \" \", msg.content]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)), indicatorState.map((indicator, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: indicator.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ChatMessages;\nexport default ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatMessages","messages","indicatorState","children","map","msg","index","role","fileName","_jsxFileName","lineNumber","columnNumber","content","indicator","status","_c","$RefreshReg$"],"sources":["C:/Users/shilo/Friedmann-initial-page/frontend/src/components/chat/messages.tsx"],"sourcesContent":["import React from 'react';\nimport { DisplayMessage, LoadingIndicator } from '@/types';\n\ninterface ChatMessagesProps {\n  messages: DisplayMessage[];\n  indicatorState: LoadingIndicator[];\n}\n\nconst ChatMessages: React.FC<ChatMessagesProps> = ({ messages, indicatorState }) => {\n  return (\n    <div>\n      {messages.map((msg, index) => (\n        <div key={index}>\n          <strong>{msg.role}:</strong> {msg.content}\n        </div>\n      ))}\n      {indicatorState.map((indicator, index) => (\n        <div key={index}>\n          <em>{indicator.status}</em>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatMessages;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAe,CAAC,KAAK;EAClF,oBACEH,OAAA;IAAAI,QAAA,GACGF,QAAQ,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBP,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,GAASE,GAAG,CAACE,IAAI,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACN,GAAG,CAACO,OAAO;IAAA,GADjCN,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN,CAAC,EACDT,cAAc,CAACE,GAAG,CAAC,CAACS,SAAS,EAAEP,KAAK,kBACnCP,OAAA;MAAAI,QAAA,eACEJ,OAAA;QAAAI,QAAA,EAAKU,SAAS,CAACC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC,GADnBL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACI,EAAA,GAfIf,YAAyC;AAiB/C,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}